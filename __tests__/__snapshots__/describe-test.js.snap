// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`can be used as a React component 1`] = `
<div>
  fake
</div>
`;

exports[`has propTypes 1`] = `
Object {
  "test": [Function],
  "test10": [Function],
  "test11": [Function],
  "test12": [Function],
  "test13": [Function],
  "test14": [Function],
  "test15": [Function],
  "test16": [Function],
  "test17": [Function],
  "test2": [Function],
  "test3": [Function],
  "test4": [Function],
  "test5": [Function],
  "test6": [Function],
  "test7": [Function],
  "test8": [Function],
  "test9": [Function],
  "testDeprecated": [Function],
  "testNative": [Function],
  "testRequired": [Function],
}
`;

exports[`returns a deprecated documented json 1`] = `
Object {
  "availableAt": Array [
    Object {
      "badge": "https://codesandbox.io/static/img/play-codesandbox.svg",
      "url": "https://codesandbox.io/s/github/grommet/grommet-site?initialpath=button&amp;module=%2Fscreens%2FButton.js",
    },
    Object {
      "badge": "https://codesandbox.io/static/img/play-codesandbox.svg",
      "url": "https://codesandbox.io/s/github/grommet/grommet-site?initialpath=buttonNew&amp;module=%2Fscreens%2FButtonNew.js",
    },
  ],
  "deprecated": "yes it is deprecated",
  "description": "component",
  "name": "",
  "properties": Array [
    Object {
      "description": "any",
      "format": "any",
      "name": "test",
    },
    Object {
      "description": "array",
      "format": "array",
      "name": "test2",
    },
    Object {
      "description": "arrayOf",
      "format": "[number]",
      "name": "test3",
    },
    Object {
      "description": "bool",
      "format": "boolean",
      "name": "test4",
    },
    Object {
      "description": "custom",
      "format": "XXX-XX-XXXX",
      "name": "test5",
    },
    Object {
      "description": "element",
      "format": "element",
      "name": "test6",
    },
    Object {
      "description": "func",
      "format": "function",
      "name": "test7",
    },
    Object {
      "description": "instanceOf",
      "format": "new FakeComponent(...)",
      "name": "test8",
    },
    Object {
      "description": "node",
      "format": "node",
      "name": "test9",
    },
    Object {
      "description": "number",
      "format": "number",
      "name": "test10",
    },
    Object {
      "description": "object",
      "format": "object",
      "name": "test11",
    },
    Object {
      "description": "objectOf",
      "format": "{ test: number, ... }",
      "name": "test12",
    },
    Object {
      "description": "oneOf",
      "format": "News
Photos",
      "name": "test13",
    },
    Object {
      "description": "oneOfType",
      "format": "number
string",
      "name": "test14",
    },
    Object {
      "description": "symbol",
      "format": "symbol",
      "name": "test15",
    },
    Object {
      "description": "shape",
      "format": "{
  color: string,
  fontSize: number,
  one: 
    string
    number
    new FakeComponent(...)
    custom,
  test: new FakeComponent(...),
  test2: 
    {
      test3: string,
      test4: 
        {
          test5: string,
          test6: number,
          test7: custom,
          test8: [string]
        }
    },
  test9: 
    type1
    type2
    {
      type: 
        type1
        type2,
      count: number
    }
    [
      type1
      type2
      {
        type: 
          type1
          type2,
        count: number
      }
    ]
}",
      "name": "test16",
    },
    Object {
      "description": "mixed arrayOf",
      "format": "[
  string
  element
  object
]",
      "name": "test17",
    },
    Object {
      "description": "testRequired",
      "format": "string",
      "name": "testRequired",
      "required": true,
    },
    Object {
      "defaultValue": "abc",
      "deprecated": "use something else",
      "description": "testDeprecated",
      "format": "string",
      "name": "testDeprecated",
    },
  ],
  "usage": "test",
}
`;

exports[`returns a deprecated documented markdown 1`] = `
"## ~~~~ (yes it is deprecated)
component

[![](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/github/grommet/grommet-site?initialpath=button&amp;module=%2Fscreens%2FButton.js) [![](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/github/grommet/grommet-site?initialpath=buttonNew&amp;module=%2Fscreens%2FButtonNew.js)
## Usage

\`\`\`javascript
test
\`\`\`

## Properties

**test**

any

\`\`\`
any
\`\`\`

**test2**

array

\`\`\`
array
\`\`\`

**test3**

arrayOf

\`\`\`
[number]
\`\`\`

**test4**

bool

\`\`\`
boolean
\`\`\`

**test5**

custom

\`\`\`
XXX-XX-XXXX
\`\`\`

**test6**

element

\`\`\`
element
\`\`\`

**test7**

func

\`\`\`
function
\`\`\`

**test8**

instanceOf

\`\`\`
new FakeComponent(...)
\`\`\`

**test9**

node

\`\`\`
node
\`\`\`

**test10**

number

\`\`\`
number
\`\`\`

**test11**

object

\`\`\`
object
\`\`\`

**test12**

objectOf

\`\`\`
{ test: number, ... }
\`\`\`

**test13**

oneOf

\`\`\`
News
Photos
\`\`\`

**test14**

oneOfType

\`\`\`
number
string
\`\`\`

**test15**

symbol

\`\`\`
symbol
\`\`\`

**test16**

shape

\`\`\`
{
  color: string,
  fontSize: number,
  one: 
    string
    number
    new FakeComponent(...)
    custom,
  test: new FakeComponent(...),
  test2: 
    {
      test3: string,
      test4: 
        {
          test5: string,
          test6: number,
          test7: custom,
          test8: [string]
        }
    },
  test9: 
    type1
    type2
    {
      type: 
        type1
        type2,
      count: number
    }
    [
      type1
      type2
      {
        type: 
          type1
          type2,
        count: number
      }
    ]
}
\`\`\`

**test17**

mixed arrayOf

\`\`\`
[
  string
  element
  object
]
\`\`\`

**testRequired**

Required. testRequired

\`\`\`
string
\`\`\`

**~~testDeprecated~~** (use something else)

testDeprecated Defaults to \`abc\`.

\`\`\`
string
\`\`\`
  "
`;

exports[`returns a deprecated documented typescript 1`] = `
Object {
  "availableAt": Array [
    Object {
      "badge": "https://codesandbox.io/static/img/play-codesandbox.svg",
      "url": "https://codesandbox.io/s/github/grommet/grommet-site?initialpath=button&amp;module=%2Fscreens%2FButton.js",
    },
    Object {
      "badge": "https://codesandbox.io/static/img/play-codesandbox.svg",
      "url": "https://codesandbox.io/s/github/grommet/grommet-site?initialpath=buttonNew&amp;module=%2Fscreens%2FButtonNew.js",
    },
  ],
  "deprecated": "yes it is deprecated",
  "description": "component",
  "name": "",
  "properties": Array [
    Object {
      "description": "any",
      "format": "any",
      "name": "test",
    },
    Object {
      "description": "array",
      "format": "any[]",
      "name": "test2",
    },
    Object {
      "description": "arrayOf",
      "format": "Array<number>",
      "name": "test3",
    },
    Object {
      "description": "bool",
      "format": "boolean",
      "name": "test4",
    },
    Object {
      "description": "custom",
      "format": "any",
      "name": "test5",
    },
    Object {
      "description": "element",
      "format": "JSX.Element",
      "name": "test6",
    },
    Object {
      "description": "func",
      "format": "((...args: any[]) => any)",
      "name": "test7",
    },
    Object {
      "description": "instanceOf",
      "format": "any",
      "name": "test8",
    },
    Object {
      "description": "node",
      "format": "React.ReactNode",
      "name": "test9",
    },
    Object {
      "description": "number",
      "format": "number",
      "name": "test10",
    },
    Object {
      "description": "object",
      "format": "object",
      "name": "test11",
    },
    Object {
      "description": "objectOf",
      "format": "{ [key: string]: number }",
      "name": "test12",
    },
    Object {
      "description": "oneOf",
      "format": "\\"News\\" | \\"Photos\\"",
      "name": "test13",
    },
    Object {
      "description": "oneOfType",
      "format": "number | string",
      "name": "test14",
    },
    Object {
      "description": "symbol",
      "format": "any",
      "name": "test15",
    },
    Object {
      "description": "shape",
      "format": "{color?: string,fontSize?: number,one?: string | number | any | any,test?: any,test2?: {test3: string,test4?: {test5?: string,test6?: number,test7?: any,test8?: Array<string>}},test9?: \\"type1\\" | \\"type2\\" | {type?: \\"type1\\" | \\"type2\\",count?: number} | Array<\\"type1\\" | \\"type2\\" | {type?: \\"type1\\" | \\"type2\\",count?: number}>}",
      "name": "test16",
    },
    Object {
      "description": "mixed arrayOf",
      "format": "Array<string | JSX.Element | object>",
      "name": "test17",
    },
    Object {
      "description": "testRequired",
      "format": "string",
      "name": "testRequired",
      "required": true,
    },
    Object {
      "defaultValue": "abc",
      "deprecated": "use something else",
      "description": "testDeprecated",
      "format": "string",
      "name": "testDeprecated",
    },
  ],
  "usage": "test",
}
`;

exports[`returns a documented json 1`] = `
Object {
  "availableAt": Array [
    Object {
      "badge": "https://codesandbox.io/static/img/play-codesandbox.svg",
      "url": "https://codesandbox.io/s/github/grommet/grommet-site?initialpath=button&amp;module=%2Fscreens%2FButton.js",
    },
    Object {
      "badge": "https://codesandbox.io/static/img/play-codesandbox.svg",
      "url": "https://codesandbox.io/s/github/grommet/grommet-site?initialpath=buttonNew&amp;module=%2Fscreens%2FButtonNew.js",
    },
  ],
  "description": "component",
  "details": "component details",
  "intrinsicElement": "label",
  "name": "Component",
  "properties": Array [
    Object {
      "description": "any",
      "format": "any",
      "name": "test",
    },
    Object {
      "description": "array",
      "format": "array",
      "name": "test2",
    },
    Object {
      "description": "arrayOf",
      "format": "[number]",
      "name": "test3",
    },
    Object {
      "description": "bool",
      "format": "boolean",
      "name": "test4",
    },
    Object {
      "description": "custom",
      "format": "XXX-XX-XXXX",
      "name": "test5",
    },
    Object {
      "description": "element",
      "format": "element",
      "name": "test6",
    },
    Object {
      "description": "func",
      "format": "function",
      "name": "test7",
    },
    Object {
      "description": "instanceOf",
      "format": "new FakeComponent(...)",
      "name": "test8",
    },
    Object {
      "description": "node",
      "format": "node",
      "name": "test9",
    },
    Object {
      "description": "number",
      "format": "number",
      "name": "test10",
    },
    Object {
      "description": "object",
      "format": "object",
      "name": "test11",
    },
    Object {
      "description": "objectOf",
      "format": "{ test: number, ... }",
      "name": "test12",
    },
    Object {
      "description": "oneOf",
      "format": "News
Photos",
      "name": "test13",
    },
    Object {
      "description": "oneOfType",
      "format": "number
string",
      "name": "test14",
    },
    Object {
      "description": "symbol",
      "format": "symbol",
      "name": "test15",
    },
    Object {
      "description": "shape",
      "format": "{
  color: string,
  fontSize: number,
  one: 
    string
    number
    new FakeComponent(...)
    custom,
  test: new FakeComponent(...),
  test2: 
    {
      test3: string,
      test4: 
        {
          test5: string,
          test6: number,
          test7: custom,
          test8: [string]
        }
    },
  test9: 
    type1
    type2
    {
      type: 
        type1
        type2,
      count: number
    }
    [
      type1
      type2
      {
        type: 
          type1
          type2,
        count: number
      }
    ]
}",
      "name": "test16",
    },
    Object {
      "description": "mixed arrayOf",
      "format": "[
  string
  element
  object
]",
      "name": "test17",
    },
    Object {
      "description": "testRequired",
      "format": "string",
      "name": "testRequired",
      "required": true,
    },
    Object {
      "defaultValue": "abc",
      "deprecated": "use something else",
      "description": "testDeprecated",
      "format": "string",
      "name": "testDeprecated",
    },
  ],
  "usage": "test",
}
`;

exports[`returns a documented markdown 1`] = `
"## Component
component

component details

[![](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/github/grommet/grommet-site?initialpath=button&amp;module=%2Fscreens%2FButton.js) [![](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/github/grommet/grommet-site?initialpath=buttonNew&amp;module=%2Fscreens%2FButtonNew.js)
## Usage

\`\`\`javascript
test
\`\`\`

## Properties

**test**

any

\`\`\`
any
\`\`\`

**test2**

array

\`\`\`
array
\`\`\`

**test3**

arrayOf

\`\`\`
[number]
\`\`\`

**test4**

bool

\`\`\`
boolean
\`\`\`

**test5**

custom

\`\`\`
XXX-XX-XXXX
\`\`\`

**test6**

element

\`\`\`
element
\`\`\`

**test7**

func

\`\`\`
function
\`\`\`

**test8**

instanceOf

\`\`\`
new FakeComponent(...)
\`\`\`

**test9**

node

\`\`\`
node
\`\`\`

**test10**

number

\`\`\`
number
\`\`\`

**test11**

object

\`\`\`
object
\`\`\`

**test12**

objectOf

\`\`\`
{ test: number, ... }
\`\`\`

**test13**

oneOf

\`\`\`
News
Photos
\`\`\`

**test14**

oneOfType

\`\`\`
number
string
\`\`\`

**test15**

symbol

\`\`\`
symbol
\`\`\`

**test16**

shape

\`\`\`
{
  color: string,
  fontSize: number,
  one: 
    string
    number
    new FakeComponent(...)
    custom,
  test: new FakeComponent(...),
  test2: 
    {
      test3: string,
      test4: 
        {
          test5: string,
          test6: number,
          test7: custom,
          test8: [string]
        }
    },
  test9: 
    type1
    type2
    {
      type: 
        type1
        type2,
      count: number
    }
    [
      type1
      type2
      {
        type: 
          type1
          type2,
        count: number
      }
    ]
}
\`\`\`

**test17**

mixed arrayOf

\`\`\`
[
  string
  element
  object
]
\`\`\`

**testRequired**

Required. testRequired

\`\`\`
string
\`\`\`

**~~testDeprecated~~** (use something else)

testDeprecated Defaults to \`abc\`.

\`\`\`
string
\`\`\`
  
## Intrinsic element

\`\`\`
label
\`\`\`"
`;

exports[`returns a documented typescript 1`] = `
Object {
  "availableAt": Array [
    Object {
      "badge": "https://codesandbox.io/static/img/play-codesandbox.svg",
      "url": "https://codesandbox.io/s/github/grommet/grommet-site?initialpath=button&amp;module=%2Fscreens%2FButton.js",
    },
    Object {
      "badge": "https://codesandbox.io/static/img/play-codesandbox.svg",
      "url": "https://codesandbox.io/s/github/grommet/grommet-site?initialpath=buttonNew&amp;module=%2Fscreens%2FButtonNew.js",
    },
  ],
  "description": "component",
  "details": "component details",
  "intrinsicElement": "label",
  "name": "Component",
  "properties": Array [
    Object {
      "description": "any",
      "format": "any",
      "name": "test",
    },
    Object {
      "description": "array",
      "format": "any[]",
      "name": "test2",
    },
    Object {
      "description": "arrayOf",
      "format": "Array<number>",
      "name": "test3",
    },
    Object {
      "description": "bool",
      "format": "boolean",
      "name": "test4",
    },
    Object {
      "description": "custom",
      "format": "any",
      "name": "test5",
    },
    Object {
      "description": "element",
      "format": "JSX.Element",
      "name": "test6",
    },
    Object {
      "description": "func",
      "format": "((...args: any[]) => any)",
      "name": "test7",
    },
    Object {
      "description": "instanceOf",
      "format": "any",
      "name": "test8",
    },
    Object {
      "description": "node",
      "format": "React.ReactNode",
      "name": "test9",
    },
    Object {
      "description": "number",
      "format": "number",
      "name": "test10",
    },
    Object {
      "description": "object",
      "format": "object",
      "name": "test11",
    },
    Object {
      "description": "objectOf",
      "format": "{ [key: string]: number }",
      "name": "test12",
    },
    Object {
      "description": "oneOf",
      "format": "\\"News\\" | \\"Photos\\"",
      "name": "test13",
    },
    Object {
      "description": "oneOfType",
      "format": "number | string",
      "name": "test14",
    },
    Object {
      "description": "symbol",
      "format": "any",
      "name": "test15",
    },
    Object {
      "description": "shape",
      "format": "{color?: string,fontSize?: number,one?: string | number | any | any,test?: any,test2?: {test3: string,test4?: {test5?: string,test6?: number,test7?: any,test8?: Array<string>}},test9?: \\"type1\\" | \\"type2\\" | {type?: \\"type1\\" | \\"type2\\",count?: number} | Array<\\"type1\\" | \\"type2\\" | {type?: \\"type1\\" | \\"type2\\",count?: number}>}",
      "name": "test16",
    },
    Object {
      "description": "mixed arrayOf",
      "format": "Array<string | JSX.Element | object>",
      "name": "test17",
    },
    Object {
      "description": "testRequired",
      "format": "string",
      "name": "testRequired",
      "required": true,
    },
    Object {
      "defaultValue": "abc",
      "deprecated": "use something else",
      "description": "testDeprecated",
      "format": "string",
      "name": "testDeprecated",
    },
  ],
  "usage": "test",
}
`;
